name: Setup auth
inputs:
  environment:
    description: 'Environment to deploy in'
    required: true
  service:
    description: 'Service to deploy'
    required: true
  app_id:
    description: "Deploy app ID"
    required: true
  app_private_key:
    description: 'Deploy app private key'
    required: true
  manifests_repo:
    description: 'Manifests repository'
    required: true
  values_file_name:
    description: 'Values file name'
    required: true
  modified_values:
    description: 'Modified values'
    required: true
runs:
  using: composite
  steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ inputs.app_id }}
        private-key: ${{ inputs.app_private_key }}
        owner: ${{ github.repository_owner }}
        repositories: ${{ inputs.manifests_repo }}
    - name: Checkout manifests repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository_owner }}/${{ inputs.manifests_repo }}
        token: ${{ steps.app-token.outputs.token }}
        path: manifests
    - name: Install yq
      shell: bash
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq
    - name: Update Helm values
      if: github.event.client_payload.environment == 'dev'
      shell: bash
      run: |
        SERVICE_NAME=${{ inputs.service }}
        IMAGE_TAG=${{ github.sha }}
        cd manifests/$SERVICE_NAME

        json_string="${{ inputs.modified_values }}"
        json_string=$(echo $json_string | sed "s/'/\"/g")

        # Generate update commands from JSON
        updates=$(echo $json_string | yq -r e -f json '. | to_entries | .[] | .key + " |= \"" + .value + "\""' -o json)

        # Apply each update command to the YAML file
        echo "$updates" | while read -r update; do
            if [[ ! -z "$update" ]]; then
                echo $update
                yq e -i "$update" ${{ inputs.values_file_name }}
            fi
        done

        cat ${{ inputs.values_file_name }}

        git config --global user.name "deployooooooooor[bot]"
        git config --global user.email "deployooooooooor[bot]@users.noreply.github.com"
        git add .
        git commit -m "Update $SERVICE_NAME image to $IMAGE_TAG"
        git push
    - name: Update Helm values
      shell: bash
      if: github.event.client_payload.environment != 'dev'
      run: |
        SERVICE_NAME=${{ github.event.client_payload.service }}
        IMAGE_TAG=${{ github.event.client_payload.tag }}
        cd $SERVICE_NAME
        yq eval ".image.tag = \"$IMAGE_TAG\"" -i values.yaml
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v6
      if: github.event.client_payload.environment != 'dev'
      with:
        commit-message: Promote ${{ github.event.client_payload.service }} to ${{ github.event.client_payload.tag }}
        committer: deployooooooooor[bot] <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
        author: deployooooooooor[bot] <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
        branch: ${{ github.event.client_payload.environment }}-promote-${{ github.event.client_payload.service }}-${{ github.event.client_payload.tag }}
        delete-branch: true
        title: 'chore(${{ github.event.client_payload.service }}): Promote to ${{ github.event.client_payload.tag }}'
        body: |
          Promoting `${{ github.event.client_payload.service }}` (version `${{ github.event.client_payload.tag }}`) to `${{ github.event.client_payload.environment }}`.
          - Auto-generated by [create-pull-request][1]

          [1]: https://github.com/peter-evans/create-pull-request
        labels: |
          automated pr
        draft: false
